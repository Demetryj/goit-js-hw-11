{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,S,yCAYA,IAAIC,EAAa,EACbC,EAAW,EAIf,MAAMC,EAASC,SAASC,cAAc,gBAChCC,EAAUF,SAASC,cAAc,SACjCE,EAAYH,SAASC,cAAc,YACnCG,EAAgBJ,SAASC,cAAc,cAuF7CI,eAAeC,IACb,MAAMC,EAAYL,EAAQM,MAE1BV,GAAYH,EAAAc,KACZZ,GAAcF,EAAAe,SAEdN,EAAcO,UAAUC,IAAI,mBAE5B,IACE,MAAMC,QAA4B,EAAAlB,EAAAmB,aAAYP,EAAWT,GACnDiB,EAAiBF,EAAoBG,KAG3C,GAF0BH,EAAoBI,WAErBpB,EAUvB,OATAqB,EAAAC,GAASC,OAAOC,KACd,8DAGFC,EAA4BP,GAE5BX,EAAcO,UAAUC,IAAI,wBAC5BR,EAAcmB,oBAAoB,QAASjB,GAK7CgB,EAA4BP,GAE5BX,EAAcO,UAAUa,OAAO,kB,CAC/B,MAAOC,GACPC,QAAQC,IAAIF,EAAMG,Q,EAItB,SAASC,EAAgBC,GACvB,MAAMC,EAASD,EACZE,KAAIC,IACH,MAAMC,aACJA,EAAYC,cACZA,EAAaC,KACbA,EAAIC,MACJA,EAAKC,MACLA,EAAKC,SACLA,EAAQC,UACRA,GACEP,EAEJ,MAAO,yDACiBE,wBACZD,WAAsBE,sHAGnBC,8DAGAC,iEAGGC,kEAGCC,6CAIhB,IAEJC,KAAK,IAERtC,EAAUuC,mBAAmB,YAAaX,E,CAgC5C,SAAST,EAA4BP,GACnCc,EAAgBd,GA9BlB,WACE,MAAM4B,EACJxC,EAAUyC,kBAAkBC,wBAAwBC,OAEoCC,OAAnFC,SAAS,CACdC,IAA4B,EAAvBN,EACLO,SAAU,U,CAyBZC,GAGgB,IAAIjC,EAAAkC,GAAJ,CAAmB,cAC3BC,S,CAhMVtD,EAAOuD,iBAAiB,UAwBxBjD,eAA4BkD,GAC1BA,EAAMC,iBACNrD,EAAUsD,UAAY,GACtB5D,EAAa,EACbO,EAAcO,UAAUC,IAAI,mBAE5B,MAAM8C,EAAaH,EAAMI,cAAcC,SAASC,WAAWrD,MAAMsD,OAQjE,IACE,MAAMC,QAAqB,EAAApE,EAAAmB,aAAY4C,GACjC5B,EAAciC,EAAa/C,KAC3BgD,EAAsBD,EAAa9C,UAEzC,GAA2B,IAAvBa,EAAYmC,OACd/C,EAAAC,GAASC,OAAO8C,QACd,gFAEG,IAAmB,KAAfR,EACT,OAEAxC,EAAAC,GAASC,OAAO+C,QACd,oBAAoBH,YACpB,CACEI,QAAS,IACTC,SAAU,aAIdxC,EAAgBC,GACC,IAAIZ,EAAAkC,GAAJ,CAAmB,aAAc,C,GASlD,GAAIY,EAAsBrE,EAAAe,UAAY,EAEpC,YADAN,EAAcO,UAAUC,IAAI,mBAI9Bf,EAAaF,EAAAe,SACbZ,EAAWH,EAAAc,KAEXL,EAAcO,UAAUa,OAAO,mBAE/BpB,EAAckD,iBAAiB,QAAShD,E,EAE1C,MAAOmB,GACPC,QAAQC,IAAIF,EAAMG,Q","sources":["src/index.js"],"sourcesContent":["import { per_page, page, fetchImages } from './fetch_images';\nimport './css/styles.css';\nimport Notiflix from 'notiflix';\nimport axios from 'axios';\nimport SimpleLightbox from 'simplelightbox';\n// Додатковий імпорт стилів\nimport 'simplelightbox/dist/simple-lightbox.min.css';\n\n// const KEY_API = '30262490-03bcd09aff61aef6d7939f62f';\n// const URL = 'https://pixabay.com/api/';\n// let page = 1;\n// const per_page = 40;\nlet sumPerPage = 0;\nlet nextPage = 0;\n\n\n\nconst formEl = document.querySelector('#search-form');\nconst inputEl = document.querySelector('input');\nconst galleryEl = document.querySelector('.gallery');\nconst btnLoadMoreEl = document.querySelector('.load-more');\n\nformEl.addEventListener('submit', onFormSubmit);\n\n// async function fetchImages(name, page) {\n//   const options = {\n//     params: {\n//       key: KEY_API,\n//       q: `${name}`,\n//       image_type: 'photo',\n//       orientation: 'horizontal',\n//       safesearch: true,\n//       per_page,\n//       page,\n//     },\n//     headers: {\n//       'Content-Type': 'application/json',\n//     },\n//   };\n\n//   const response = await axios.get(URL, options);\n//   const data = response.data;\n\n//   return data;\n// }\n\nasync function onFormSubmit(event) {\n  event.preventDefault();\n  galleryEl.innerHTML = '';\n  sumPerPage = 0;\n  btnLoadMoreEl.classList.add('visually-hidden');\n\n  const inputValue = event.currentTarget.elements.safesearch.value.trim();\n\n  // const {\n  //   elements: { safesearch },\n  // } = event.currentTarget;\n\n  // const inputValue = safesearch.value.trim();\n\n  try {\n    const dataOfImages = await fetchImages(inputValue);\n    const arrayImages = dataOfImages.hits;\n    const totalQuantityImages = dataOfImages.totalHits;\n\n    if (arrayImages.length === 0) {\n      Notiflix.Notify.failure(\n        'Sorry, there are no images matching your search query. Please try again.'\n      );\n    } else if (inputValue === '') {\n      return;\n    } else {\n      Notiflix.Notify.success(\n        `Hooray! We found ${totalQuantityImages} images.`,\n        {\n          timeout: 3000,\n          position: 'left-top',\n        }\n      );\n\n      renderPhotoCard(arrayImages);\n      const lightbox = new SimpleLightbox('.gallery a', {\n        /* options */\n      }); // використання бібліотеки \"SimpleLightbox\" по створенню лайтбокса з великим зображенням\n\n      /* Перевірка: якщо кількість зображень, що завантажилися при сабміті форми,\n       менше ніж per_page (у нашому випадку 40), \n       тоді кнопка \"Load More\" не з'являється (не видаляється клас 'visually-hidden')\n      і виходимо з функції\n       */\n      if (totalQuantityImages / per_page <= 1) {\n        btnLoadMoreEl.classList.add('visually-hidden');\n        return;\n      }\n\n      sumPerPage = per_page;\n      nextPage = page; // nextPage = 1;\n\n      btnLoadMoreEl.classList.remove('visually-hidden');\n\n      btnLoadMoreEl.addEventListener('click', onbtnLoadMoreEl);\n    }\n  } catch (error) {\n    console.log(error.message);\n  }\n}\n\nasync function onbtnLoadMoreEl() {\n  const dataInput = inputEl.value;\n\n  nextPage += page;\n  sumPerPage += per_page;\n\n  btnLoadMoreEl.classList.add('visually-hidden');\n\n  try {\n    const newPagedataOfImages = await fetchImages(dataInput, nextPage);\n    const newArrayImages = newPagedataOfImages.hits;\n    const maxQuantityImages = newPagedataOfImages.totalHits;\n\n    if (maxQuantityImages <= sumPerPage) {\n      Notiflix.Notify.info(\n        \"We're sorry, but you've reached the end of search results.\"\n      );\n\n      renderMarkupAndSmoothScroll(newArrayImages);\n\n      btnLoadMoreEl.classList.add('visually-hidden');\n      btnLoadMoreEl.removeEventListener('click', onbtnLoadMoreEl);\n\n      return;\n    }\n\n    renderMarkupAndSmoothScroll(newArrayImages);\n\n    btnLoadMoreEl.classList.remove('visually-hidden');\n  } catch (error) {\n    console.log(error.message);\n  }\n}\n\nfunction renderPhotoCard(arrayImages) {\n  const markup = arrayImages\n    .map(img => {\n      const {\n        webformatURL,\n        largeImageURL,\n        tags,\n        likes,\n        views,\n        comments,\n        downloads,\n      } = img;\n\n      return `<div class=\"photo-card\">\n      <a class='link' href=\"${largeImageURL}\">\n      <img src=\"${webformatURL}\" alt=\"${tags}\" loading=\"lazy\" width='200' height='140' />\n  <div class=\"info\">\n    <p class=\"info-item\">\n      <b>Likes</b> ${likes}\n    </p>\n    <p class=\"info-item\">\n      <b>Views</b> ${views}\n    </p>\n    <p class=\"info-item\">\n      <b>Comments</b> ${comments}\n    </p>\n    <p class=\"info-item\">\n      <b>Downloads</b> ${downloads}\n    </p>\n  </div>\n      </a>\n  </div>`;\n    })\n    .join('');\n\n  galleryEl.insertAdjacentHTML('beforeend', markup);\n}\n\nfunction smoothScroll() {\n  const positionCardToScroll =\n    galleryEl.firstElementChild.getBoundingClientRect().height; // отримання координати позиції першого елемента (картки) в гвлереї, які загрузилися після натискання кнопки \"Load more\"\n\n  window.scrollBy({\n    top: positionCardToScroll * 2,\n    behavior: 'smooth',\n  });\n\n  //Плавне прокручування сторінки після запиту і відтворення кожної наступної групи зображень.\n  // const { height: cardHeight } = document;\n  // .querySelector('.gallery')\n  // .firstElementChild.getBoundingClientRect();\n\n  // window.scrollBy({\n  //   top: cardHeight * 2,\n  //   behavior: 'smooth',\n  // });\n\n  // const x = galleryEl.firstElementChild.getBoundingClientRect();\n  // const y = x.height;\n  // console.log(y);\n\n  // window.scrollBy({\n  //   top: y * 2,\n  //   behavior: 'smooth',\n  // });\n}\n\nfunction renderMarkupAndSmoothScroll(newArrayImages) {\n  renderPhotoCard(newArrayImages);\n  smoothScroll();\n\n  //використання бібліотеки \"SimpleLightbox\" для створення лайтбокса з великим зображенням та метода refresh() при завантаженні ще зображень за запитом після натискання кнопки \"Load more\"\n  const gallery = new SimpleLightbox('.gallery a');\n  gallery.refresh();\n}\n"],"names":["$81RIQ","parcelRequire","$1f0dc3b9307be026$var$sumPerPage","$1f0dc3b9307be026$var$nextPage","$1f0dc3b9307be026$var$formEl","document","querySelector","$1f0dc3b9307be026$var$inputEl","$1f0dc3b9307be026$var$galleryEl","$1f0dc3b9307be026$var$btnLoadMoreEl","async","$1f0dc3b9307be026$var$onbtnLoadMoreEl","dataInput","value","page","per_page","classList","add","newPagedataOfImages","fetchImages","newArrayImages","hits","totalHits","$parcel$interopDefault","$eWCmQ","Notify","info","$1f0dc3b9307be026$var$renderMarkupAndSmoothScroll","removeEventListener","remove","error","console","log","message","$1f0dc3b9307be026$var$renderPhotoCard","arrayImages","markup","map","img","webformatURL","largeImageURL","tags","likes","views","comments","downloads","join","insertAdjacentHTML","positionCardToScroll","firstElementChild","getBoundingClientRect","height","window","scrollBy","top","behavior","$1f0dc3b9307be026$var$smoothScroll","$fZKcF","refresh","addEventListener","event","preventDefault","innerHTML","inputValue","currentTarget","elements","safesearch","trim","dataOfImages","totalQuantityImages","length","failure","success","timeout","position"],"version":3,"file":"index.4383c4f6.js.map"}