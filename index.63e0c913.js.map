{"mappings":"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","sources":["src/index.js"],"sourcesContent":["import './css/styles.css';\nimport Notiflix from 'notiflix';\nimport axios from 'axios';\nimport SimpleLightbox from 'simplelightbox';\n// Додатковий імпорт стилів\nimport 'simplelightbox/dist/simple-lightbox.min.css';\n\nconst KEY_API = '30262490-03bcd09aff61aef6d7939f62f';\nconst URL = 'https://pixabay.com/api/';\nlet page = 1;\nconst per_page = 40;\nlet sumPerPage = 0;\n\nconst formEl = document.querySelector('#search-form');\nconst inputEl = document.querySelector('input');\nconst galleryEl = document.querySelector('.gallery');\nconst btnLoadMoreEl = document.querySelector('.load-more');\n\nformEl.addEventListener('submit', onFormSubmit);\n\nasync function fetchImages(name, page) {\n  const options = {\n    params: {\n      key: KEY_API,\n      q: `${name}`,\n      image_type: 'photo',\n      orientation: 'horizontal',\n      safesearch: true,\n      per_page,\n      page,\n    },\n    headers: {\n      'Content-Type': 'application/json',\n    },\n  };\n\n  const response = await axios.get(URL, options);\n  const data = response.data;\n  //   console.log(data);\n  return data;\n}\n\nasync function onFormSubmit(event) {\n  event.preventDefault();\n  galleryEl.innerHTML = '';\n  sumPerPage = 0;\n  btnLoadMoreEl.classList.add('visually-hidden');\n\n  const inputValue = event.currentTarget.elements.safesearch.value.trim();\n\n  try {\n    const dataOfImages = await fetchImages(inputValue);\n    const arrayImages = dataOfImages.hits;\n    const totalQuantityImages = dataOfImages.totalHits;\n\n    if (arrayImages.length === 0) {\n      Notiflix.Notify.failure(\n        'Sorry, there are no images matching your search query. Please try again.'\n      );\n    } else if (inputValue === '') {\n      return;\n    } else {\n      Notiflix.Notify.success(\n        `Hooray! We found ${totalQuantityImages} images.`,\n        {\n          timeout: 3000,\n          position: 'left-top',\n        }\n      );\n\n      renderPhotoCard(arrayImages);\n      const lightbox = new SimpleLightbox('.gallery a', {\n        /* options */\n      }); // використання бібліотеки \"SimpleLightbox\" по створенню лайтбокса з великим зображенням\n\n      sumPerPage = per_page;\n      page = 1;\n\n      btnLoadMoreEl.classList.remove('visually-hidden');\n\n      btnLoadMoreEl.addEventListener('click', onbtnLoadMoreEl);\n    }\n  } catch (error) {\n    console.log(error.message);\n  }\n}\n\nasync function onbtnLoadMoreEl() {\n  const dataInput = inputEl.value;\n\n  page += 1;\n  sumPerPage += per_page;\n\n  btnLoadMoreEl.classList.add('visually-hidden');\n\n  try {\n    const newPagedataOfImages = await fetchImages(dataInput, page);\n    const newArrayImages = newPagedataOfImages.hits;\n    const maxQuantityImages = newPagedataOfImages.totalHits;\n\n    if (maxQuantityImages <= sumPerPage) {\n      Notiflix.Notify.info(\n        \"We're sorry, but you've reached the end of search results.\"\n      );\n\n      renderMarkupAndSmoothScroll(newArrayImages);\n\n      btnLoadMoreEl.classList.add('visually-hidden');\n      btnLoadMoreEl.removeEventListener('click', onbtnLoadMoreEl);\n\n      return;\n    }\n\n    renderMarkupAndSmoothScroll(newArrayImages);\n\n    btnLoadMoreEl.classList.remove('visually-hidden');\n  } catch (error) {\n    console.log(error.message);\n  }\n}\n\nfunction renderPhotoCard(arrayImages) {\n  const markup = arrayImages\n    .map(img => {\n      const {\n        webformatURL,\n        largeImageURL,\n        tags,\n        likes,\n        views,\n        comments,\n        downloads,\n      } = img;\n\n      return `<div class=\"photo-card\">\n      <a class='link' href=\"${largeImageURL}\">\n      <img src=\"${webformatURL}\" alt=\"${tags}\" loading=\"lazy\" width='200' height='140' />\n  <div class=\"info\">\n    <p class=\"info-item\">\n      <b>Likes</b> ${likes}\n    </p>\n    <p class=\"info-item\">\n      <b>Views</b> ${views}\n    </p>\n    <p class=\"info-item\">\n      <b>Comments</b> ${comments}\n    </p>\n    <p class=\"info-item\">\n      <b>Downloads</b> ${downloads}\n    </p>\n  </div>\n      </a>\n  </div>`;\n    })\n    .join('');\n\n  galleryEl.insertAdjacentHTML('beforeend', markup);\n}\n\nfunction smoothScroll() {\n  const positionCardToScroll =\n    galleryEl.firstElementChild.getBoundingClientRect().height; // отримання координати позиції першого елемента (картки) в гвлереї, які загрузилися після натискання кнопки \"Load more\"\n\n  window.scrollBy({\n    top: positionCardToScroll * 2,\n    behavior: 'smooth',\n  });\n\n  //Плавне прокручування сторінки після запиту і відтворення кожної наступної групи зображень.\n  // const { height: cardHeight } = document;\n  // .querySelector('.gallery')\n  // .firstElementChild.getBoundingClientRect();\n\n  // window.scrollBy({\n  //   top: cardHeight * 2,\n  //   behavior: 'smooth',\n  // });\n\n  // const x = galleryEl.firstElementChild.getBoundingClientRect();\n  // const y = x.height;\n  // console.log(y);\n\n  // window.scrollBy({\n  //   top: y * 2,\n  //   behavior: 'smooth',\n  // });\n}\n\nfunction renderMarkupAndSmoothScroll(newArrayImages) {\n  renderPhotoCard(newArrayImages);\n  smoothScroll();\n\n  //використання бібліотеки \"SimpleLightbox\" для створення лайтбокса з великим зображенням та метода refresh() при завантаженні ще зображень за запитом після натискання кнопки \"Load more\"\n  const gallery = new SimpleLightbox('.gallery a');\n  gallery.refresh();\n}\n"],"names":["$bpxeT","parcelRequire","$b8f9b7833fa37166$var$KEY_API","$b8f9b7833fa37166$var$URL","$b8f9b7833fa37166$var$page","$b8f9b7833fa37166$var$per_page","$b8f9b7833fa37166$var$sumPerPage","$b8f9b7833fa37166$var$formEl","document","querySelector","$b8f9b7833fa37166$var$inputEl","$b8f9b7833fa37166$var$galleryEl","$b8f9b7833fa37166$var$btnLoadMoreEl","$b8f9b7833fa37166$var$fetchImages","name","page1","$b8f9b7833fa37166$var$_fetchImages","apply","this","arguments","$parcel$interopDefault","$2TvXO","mark","_callee","options","response","data","params","key","q","concat","image_type","orientation","safesearch","per_page","page","headers","$dIxxU","get","_ctx","sent","$b8f9b7833fa37166$var$_onFormSubmit","event","inputValue","dataOfImages","arrayImages","totalQuantityImages","preventDefault","innerHTML","classList","add","currentTarget","elements","value","trim","hits","totalHits","length","$iU1Pc","Notify","failure","success","timeout","position","$b8f9b7833fa37166$var$renderPhotoCard","$5IjG7","remove","addEventListener","$b8f9b7833fa37166$var$onbtnLoadMoreEl","console","log","t0","message","$b8f9b7833fa37166$var$_onbtnLoadMoreEl","dataInput","newPagedataOfImages","newArrayImages","info","$b8f9b7833fa37166$var$renderMarkupAndSmoothScroll","removeEventListener","markup","map","img","webformatURL","largeImageURL","tags","likes","views","comments","downloads","join","insertAdjacentHTML","positionCardToScroll","firstElementChild","getBoundingClientRect","height","window","scrollBy","top","behavior","refresh"],"version":3,"file":"index.63e0c913.js.map"}