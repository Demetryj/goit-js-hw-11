{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,S,mEAYIC,EAAa,EACbC,EAAW,EAETC,EAASC,SAASC,cAAc,gBAChCC,EAAUF,SAASC,cAAc,SACjCE,EAAYH,SAASC,cAAc,YACnCG,EAAgBJ,SAASC,cAAc,c,SA0B9BI,I,OAAAA,EAAfC,EAAAX,EAAA,CAAAW,EAAAC,GAAAC,MAAA,SAAAC,EAA4BC,G,IAMpBC,EAGEC,EACAC,EACAC,E,yEAVRJ,EAAMK,iBACNZ,EAAUa,UAAY,GACtBnB,EAAa,EACbO,EAAca,UAAUC,IAAI,mBAEtBP,EAAaD,EAAMS,cAAcC,SAASC,WAAWC,MAAMC,O,mBAGpC,EAAAC,EAAAC,aAAYd,G,UAAjCC,EAAYc,EAAAC,KACZd,EAAcD,EAAagB,KAC3Bd,EAAsBF,EAAaiB,UAEd,IAAvBhB,EAAYiB,OAAY,C,gBAC1BxB,EAAAyB,GAASC,OAAOC,QACd,4E,2BAEsB,KAAftB,EAAiB,C,kDAG1BL,EAAAyB,GAASC,OAAOE,QACd,oBAAwCC,OAApBrB,EAAoB,YACxC,CACEsB,QAAS,IACTC,SAAU,aAIdC,EAAgBzB,GACC,IAAIP,EAAAiC,GAAJ,CAAmB,aAAc,C,GAIW1C,EAAhD2B,EAAAgB,SACb1C,EAAW0B,EAAAiB,KAEXrC,EAAca,UAAUyB,OAAO,mBAE/BtC,EAAcuC,iBAAiB,QAASC,G,0DAG1CC,QAAQC,IAAIpB,EAAAqB,GAAMC,S,2DAzCKC,MAAAC,KAAAC,U,UA6CZP,I,OAAAQ,EAAeH,MAAAC,KAAAC,U,UAAfC,I,OAAAA,EAAf9C,EAAAX,EAAA,CAAAW,EAAAC,GAAAC,MAAA,SAAAC,I,IACQ4C,EAQEC,EACAC,E,yEATFF,EAAYnD,EAAQoB,MAE1BxB,GAAY0B,EAAAiB,KACZ5C,GAAc2B,EAAAgB,SAEdpC,EAAca,UAAUC,IAAI,mB,mBAGQ,EAAAM,EAAAC,aAAY4B,EAAWvD,G,UAAnDwD,EAAmB5B,EAAAC,KACnB4B,EAAiBD,EAAoB1B,OACjB0B,EAAoBzB,WAErBhC,GAAU,C,uBACjCS,EAAAyB,GAASC,OAAOwB,KACd,8DAGFC,EAA4BF,GAE5BnD,EAAca,UAAUC,IAAI,mBAC5Bd,EAAcsD,oBAAoB,QAASd,G,2BAK7Ca,EAA4BF,GAE5BnD,EAAca,UAAUyB,OAAO,mB,kDAE/BG,QAAQC,IAAIpB,EAAAqB,GAAMC,S,2DA9BQC,MAAAC,KAAAC,U,CAkC9B,SAASb,EAAgBzB,GACvB,IAAM8C,EAAS9C,EACZ+C,KAAI,SAAAC,GACH,IACEC,EAOED,EAPFC,aACAC,EAMEF,EANFE,cACAC,EAKEH,EALFG,KACAC,EAIEJ,EAJFI,MACAC,EAGEL,EAHFK,MACAC,EAEEN,EAFFM,SACAC,EACEP,EADFO,UAGF,MAAO,2DAEKjC,OADY4B,EAAc,wBACJ5B,OAAtB2B,EAAa,WAGV3B,OAHmB6B,EAAK,0HAMxB7B,OAHA8B,EAAM,8DAMH9B,OAHH+B,EAAM,iEAMF/B,OAHDgC,EAAS,kEAGEhC,OAAViC,EAAU,6C,IAM9BC,KAAK,IAERlE,EAAUmE,mBAAmB,YAAaX,E,CAgC5C,SAASF,EAA4BF,GA7BrC,IACQgB,EA6BNjC,EAAgBiB,GA7BVgB,EACJpE,EAAUqE,kBAAkBC,wBAAwBC,OAEoCC,OAAnFC,SAAS,CACdC,IAA4B,EAAvBN,EACLO,SAAU,WA4BI,IAAIxE,EAAAiC,GAAJ,CAAmB,cAC3BwC,S,CAhLVhF,EAAO4C,iBAAiB,U,SAwBIjC,G,OAAbL,EAAY4C,MAAAC,KAAAC,U","sources":["src/index.js"],"sourcesContent":["import { per_page, page, fetchImages } from './fetch_images';\nimport './css/styles.css';\nimport Notiflix from 'notiflix';\nimport axios from 'axios';\nimport SimpleLightbox from 'simplelightbox';\n// Додатковий імпорт стилів\nimport 'simplelightbox/dist/simple-lightbox.min.css';\n\n// const KEY_API = '30262490-03bcd09aff61aef6d7939f62f';\n// const URL = 'https://pixabay.com/api/';\n// let page = 1;\n// const per_page = 40;\nlet sumPerPage = 0;\nlet nextPage = 0;\n\nconst formEl = document.querySelector('#search-form');\nconst inputEl = document.querySelector('input');\nconst galleryEl = document.querySelector('.gallery');\nconst btnLoadMoreEl = document.querySelector('.load-more');\n\nformEl.addEventListener('submit', onFormSubmit);\n\n// async function fetchImages(name, page) {\n//   const options = {\n//     params: {\n//       key: KEY_API,\n//       q: `${name}`,\n//       image_type: 'photo',\n//       orientation: 'horizontal',\n//       safesearch: true,\n//       per_page,\n//       page,\n//     },\n//     headers: {\n//       'Content-Type': 'application/json',\n//     },\n//   };\n\n//   const response = await axios.get(URL, options);\n//   const data = response.data;\n\n//   return data;\n// }\n\nasync function onFormSubmit(event) {\n  event.preventDefault();\n  galleryEl.innerHTML = '';\n  sumPerPage = 0;\n  btnLoadMoreEl.classList.add('visually-hidden');\n\n  const inputValue = event.currentTarget.elements.safesearch.value.trim();\n\n  try {\n    const dataOfImages = await fetchImages(inputValue);\n    const arrayImages = dataOfImages.hits;\n    const totalQuantityImages = dataOfImages.totalHits;\n\n    if (arrayImages.length === 0) {\n      Notiflix.Notify.failure(\n        'Sorry, there are no images matching your search query. Please try again.'\n      );\n    } else if (inputValue === '') {\n      return;\n    } else {\n      Notiflix.Notify.success(\n        `Hooray! We found ${totalQuantityImages} images.`,\n        {\n          timeout: 3000,\n          position: 'left-top',\n        }\n      );\n\n      renderPhotoCard(arrayImages);\n      const lightbox = new SimpleLightbox('.gallery a', {\n        /* options */\n      }); // використання бібліотеки \"SimpleLightbox\" по створенню лайтбокса з великим зображенням\n\n      sumPerPage = per_page;\n      nextPage = page; // nextPage = 1;\n\n      btnLoadMoreEl.classList.remove('visually-hidden');\n\n      btnLoadMoreEl.addEventListener('click', onbtnLoadMoreEl);\n    }\n  } catch (error) {\n    console.log(error.message);\n  }\n}\n\nasync function onbtnLoadMoreEl() {\n  const dataInput = inputEl.value;\n\n  nextPage += page;\n  sumPerPage += per_page;\n\n  btnLoadMoreEl.classList.add('visually-hidden');\n\n  try {\n    const newPagedataOfImages = await fetchImages(dataInput, nextPage);\n    const newArrayImages = newPagedataOfImages.hits;\n    const maxQuantityImages = newPagedataOfImages.totalHits;\n\n    if (maxQuantityImages <= sumPerPage) {\n      Notiflix.Notify.info(\n        \"We're sorry, but you've reached the end of search results.\"\n      );\n\n      renderMarkupAndSmoothScroll(newArrayImages);\n\n      btnLoadMoreEl.classList.add('visually-hidden');\n      btnLoadMoreEl.removeEventListener('click', onbtnLoadMoreEl);\n\n      return;\n    }\n\n    renderMarkupAndSmoothScroll(newArrayImages);\n\n    btnLoadMoreEl.classList.remove('visually-hidden');\n  } catch (error) {\n    console.log(error.message);\n  }\n}\n\nfunction renderPhotoCard(arrayImages) {\n  const markup = arrayImages\n    .map(img => {\n      const {\n        webformatURL,\n        largeImageURL,\n        tags,\n        likes,\n        views,\n        comments,\n        downloads,\n      } = img;\n\n      return `<div class=\"photo-card\">\n      <a class='link' href=\"${largeImageURL}\">\n      <img src=\"${webformatURL}\" alt=\"${tags}\" loading=\"lazy\" width='200' height='140' />\n  <div class=\"info\">\n    <p class=\"info-item\">\n      <b>Likes</b> ${likes}\n    </p>\n    <p class=\"info-item\">\n      <b>Views</b> ${views}\n    </p>\n    <p class=\"info-item\">\n      <b>Comments</b> ${comments}\n    </p>\n    <p class=\"info-item\">\n      <b>Downloads</b> ${downloads}\n    </p>\n  </div>\n      </a>\n  </div>`;\n    })\n    .join('');\n\n  galleryEl.insertAdjacentHTML('beforeend', markup);\n}\n\nfunction smoothScroll() {\n  const positionCardToScroll =\n    galleryEl.firstElementChild.getBoundingClientRect().height; // отримання координати позиції першого елемента (картки) в гвлереї, які загрузилися після натискання кнопки \"Load more\"\n\n  window.scrollBy({\n    top: positionCardToScroll * 2,\n    behavior: 'smooth',\n  });\n\n  //Плавне прокручування сторінки після запиту і відтворення кожної наступної групи зображень.\n  // const { height: cardHeight } = document;\n  // .querySelector('.gallery')\n  // .firstElementChild.getBoundingClientRect();\n\n  // window.scrollBy({\n  //   top: cardHeight * 2,\n  //   behavior: 'smooth',\n  // });\n\n  // const x = galleryEl.firstElementChild.getBoundingClientRect();\n  // const y = x.height;\n  // console.log(y);\n\n  // window.scrollBy({\n  //   top: y * 2,\n  //   behavior: 'smooth',\n  // });\n}\n\nfunction renderMarkupAndSmoothScroll(newArrayImages) {\n  renderPhotoCard(newArrayImages);\n  smoothScroll();\n\n  //використання бібліотеки \"SimpleLightbox\" для створення лайтбокса з великим зображенням та метода refresh() при завантаженні ще зображень за запитом після натискання кнопки \"Load more\"\n  const gallery = new SimpleLightbox('.gallery a');\n  gallery.refresh();\n}\n"],"names":["$bpxeT","parcelRequire","$b8f9b7833fa37166$var$sumPerPage","$b8f9b7833fa37166$var$nextPage","$b8f9b7833fa37166$var$formEl","document","querySelector","$b8f9b7833fa37166$var$inputEl","$b8f9b7833fa37166$var$galleryEl","$b8f9b7833fa37166$var$btnLoadMoreEl","$b8f9b7833fa37166$var$_onFormSubmit","$parcel$interopDefault","$2TvXO","mark","_callee","event","inputValue","dataOfImages","arrayImages","totalQuantityImages","preventDefault","innerHTML","classList","add","currentTarget","elements","safesearch","value","trim","$a6m4y","fetchImages","_ctx","sent","hits","totalHits","length","$iU1Pc","Notify","failure","success","concat","timeout","position","$b8f9b7833fa37166$var$renderPhotoCard","$5IjG7","per_page","page","remove","addEventListener","$b8f9b7833fa37166$var$onbtnLoadMoreEl","console","log","t0","message","apply","this","arguments","$b8f9b7833fa37166$var$_onbtnLoadMoreEl","dataInput","newPagedataOfImages","newArrayImages","info","$b8f9b7833fa37166$var$renderMarkupAndSmoothScroll","removeEventListener","markup","map","img","webformatURL","largeImageURL","tags","likes","views","comments","downloads","join","insertAdjacentHTML","positionCardToScroll","firstElementChild","getBoundingClientRect","height","window","scrollBy","top","behavior","refresh"],"version":3,"file":"index.2872616b.js.map"}